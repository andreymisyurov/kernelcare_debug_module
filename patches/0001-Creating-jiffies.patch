From e135b8e28a624b330c745361e9950f8f16dd4789 Mon Sep 17 00:00:00 2001
From: amisyurov <amisyurov.c@arlo.com>
Date: Mon, 12 Aug 2024 02:54:30 +0500
Subject: [PATCH 1/2] Creating jiffies  - Adding the logic for creating
 directory  - Creating jiffies file  - Develop logic for reading system timer

---
 Makefile       | 10 +++++-----
 README.md      |  2 +-
 module_debug.c | 32 ++++++++++++++++++++++++++++++++
 3 files changed, 38 insertions(+), 6 deletions(-)

diff --git a/Makefile b/Makefile
index a75dd53..7aefe75 100644
--- a/Makefile
+++ b/Makefile
@@ -1,4 +1,4 @@
-obj-m += module_hello.o
+obj-m += module_debug.o
 CC = $(shell cat /proc/version | grep -oP 'gcc-\d+')
 
 all:
@@ -8,18 +8,18 @@ clean:
 	make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean
 
 load:
-	sudo insmod module_hello.ko
+	sudo insmod module_debug.ko
 	@echo "Checking kernel log:"
 	@sudo dmesg -c
 	@echo "Checking our module in kernel:"
-	@lsmod | grep module_hello
+	@lsmod | grep module_debug
 
 unload:
-	sudo rmmod module_hello.ko
+	sudo rmmod module_debug.ko
 	@echo "Checking kernel log:"
 	@sudo dmesg -c
 	@echo "Checking our module in kernel:"
-	@if lsmod | grep -q module_hello; then \
+	@if lsmod | grep -q module_debug; then \
 		echo "Module is still loaded in the system."; \
 	else \
 		echo "Module is not found in the system."; \
diff --git a/README.md b/README.md
index 3db3d7b..18e233b 100644
--- a/README.md
+++ b/README.md
@@ -10,4 +10,4 @@ call:
 
 mount | grep debugfs
 
-mount | grep debugfs
\ No newline at end of file
+cat /sys/kernel/debug/kernelcare/jiffies
\ No newline at end of file
diff --git a/module_debug.c b/module_debug.c
index e2f81a9..283b24d 100644
--- a/module_debug.c
+++ b/module_debug.c
@@ -1,20 +1,52 @@
 // SPDX-License-Identifier: GPL-2.0
 #include <linux/module.h>
 #include <linux/kernel.h>
+#include <linux/debugfs.h>
+#include <linux/jiffies.h>
+#include <linux/uaccess.h>
 
 MODULE_LICENSE("GPL");
 MODULE_AUTHOR("Andrey Misyurov");
 MODULE_DESCRIPTION("A simple Hello, KernelCare! module");
 
+static ssize_t jiffies_read(struct file *file, char __user *user_buf, size_t count, loff_t *ppos);
+
+static struct dentry *kernel_care_dir = NULL;
+static const struct file_operations jiffies_fops = {
+    .read = jiffies_read,
+};
+
+static ssize_t jiffies_read(struct file *file, char __user *user_buf, size_t count, loff_t *ppos)
+{
+    char buf[64] = {0};
+    int len = 0;
+
+    len = snprintf(buf, sizeof(buf), "%lu\n", jiffies);
+    return simple_read_from_buffer(user_buf, count, ppos, buf, len);
+}
+
 static int __init hello_init(void)
 {
     pr_info("Hello, KernelCare!\n");
+    kernel_care_dir = debugfs_create_dir("kernelcare", NULL);
+    if (!kernel_care_dir) {
+        pr_alert("Could not create kernelcare directory in debugfs\n");
+        return -ENOMEM;
+    }
+    pr_info("kernelcare directory was created!\n");
+
+    if (!debugfs_create_file("jiffies", 0444, kernel_care_dir, NULL, &jiffies_fops)) {
+        pr_alert("Could not create jiffies file in debugfs\n");
+        return -ENOMEM;
+    }
+    pr_info("Jiffies was created!\n");
     return 0;
 }
 
 static void __exit hello_exit(void)
 {
     pr_info("Goodbye, KernelCare!\n");
+    debugfs_remove_recursive(kernel_care_dir);
 }
 
 module_init(hello_init);
-- 
2.34.1

